sim_fair_coin <- sample(outcomes, size = 100, replace = TRUE)
sim_fair_coin
table(sim_fair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
table(sim_unfair_coin)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
sim_basket <-sample(outcomes, size=133, replace =TRUE, prob = c(0.45,0.55))
i_streak <- calc_streak(sim_basket)
barplot(table(i_streak))
library(knitr)
library(ggplot2)
setwd("~/Documents/Projects/Exploratory-Data-Analysis")
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
library(RColorBrewer)
library(gridExtra)
library(e1071)
theme_set(theme_minimal(20))
redwine <- read.csv('/Users/SherryT/Documents/Projects/Exploratory-Data-Analysis/wineQualityReds.csv')
redwine$qualityF <- as.factor(redwine$quality)
redwine$category[redwine$quality==3|redwine$quality==4] <- 'low'
redwine$category[redwine$quality==5|redwine$quality==6] <- 'average'
redwine$category[redwine$quality==7|redwine$quality==8] <- 'high'
redwine$category <- as.factor(redwine$category)
low_high<- subset(redwine, category=='low' | category=='high')
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=low_high)
pred <- predict(classifier,
low_high[,c('alcohol','volatile.acidity')])
table(pred,low_high$category)
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=low_high)
pred <- predict(classifier,
low_high[,c('alcohol','volatile.acidity')])
table(pred,low_high$category)
str(low_high)
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=low_high)
pred <- predict(classifier,
low_high[,c('alcohol','volatile.acidity')])
table(pred,low_high$category)
(208+45)/(208+18+9+45)
va <- seq(0, 2, length.out = 500)
alc <- seq(8, 15, length.out = 500)
ggplot(data=cluster,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category))
va <- seq(0, 2, length.out = 500)
alc <- seq(8, 15, length.out = 500)
cluster.results <- as.data.frame(expand.grid(x = va, y = alc))
names(cluster.results)=c('volatile.acidity','alcohol')
pred = predict(classifier,cluster.results)
va <- seq(0, 2, length.out = 100)
alc <- seq(8, 15, length.out = 100)
cluster.results <- as.data.frame(expand.grid(x = va, y = alc))
names(cluster.results)=c('volatile.acidity','alcohol')
pred = predict(classifier,cluster.results)
cluster.results$category<-pred
?geom_raster
ggplot(data=cluster,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category))
```
va <- seq(0, 2, length.out = 100)
alc <- seq(8, 15, length.out = 100)
cluster.results <- as.data.frame(expand.grid(x = va, y = alc))
names(cluster.results)=c('volatile.acidity','alcohol')
pred = predict(classifier,cluster.results)
cluster.results$category<-pred
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category))
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category))
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_tile(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category))
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category)) +
geom_point(data=subset(redwine, category=='average'),
aes(alpha=0.5))
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category)) +
geom_point(data=subset(redwine, category=='average'),
aes(alpha=0.1, size=1))
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category)) +
geom_point(data=subset(redwine, category=='average'),
aes(alpha=0.1, pch=4))
?Aes
?AES
?aes
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category)) +
geom_point(data=subset(redwine, category=='average'),
aes(alpha=0.1)
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category)) +
geom_point(data=subset(redwine, category=='average'),
aes(alpha=0.1))
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=redwine)
pred <- predict(classifier,
low_high[,c('alcohol','volatile.acidity')])
table(pred,low_high$category)
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=redwine)
pred <- predict(classifier,
redwine[,c('alcohol','volatile.acidity')])
table(pred,redwine$category)
va <- seq(0, 2, length.out = 100)
alc <- seq(8, 15, length.out = 100)
cluster.results <- as.data.frame(expand.grid(x = va, y = alc))
names(cluster.results)=c('volatile.acidity','alcohol')
pred = predict(classifier,cluster.results)
cluster.results$category<-pred
(1232+76+7)/(1232+76+7+77+10+141+56)
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category))
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category), position='jitter')
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category), alpha=0.5)
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category), size=1)
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category), size=2.5) +
scale_color_brewer(type='div',
guide = guide_legend(title = 'Category'))
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category), size=2.5)
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category), size=1.5)
low_high<- subset(redwine, category=='low' | category=='high')
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=low_high)
pred <- predict(classifier,
low_high[,c('alcohol','volatile.acidity')])
table(pred,low_high$category)
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category), size=1.5)
low_high<- subset(redwine, category=='low' | category=='high')
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=low_high)
pred = predict(classifier,cluster.results)
cluster.results$category<-pred
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category), size=1.5)
table(pred,low_high$category)
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=low_high)
pred <- predict(classifier,
low_high[,c('alcohol','volatile.acidity')])
table(pred,low_high$category)
low_high$good[low_high$category=='low'] <- 0
low_high$good[low_high$category=='high'] <- 1
m1 = glm(good ~ alcohol + volatile.acidity, data = low_high, family = binomial)
pred = predict(m1,cluster.results)
cluster.results$pred<-pred
cluster.results$category[cluster.results$pred>=0.5]='high'
cluster.results$category[cluster.results$pred<0.5]='low'
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category), size=1.5)
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category), size=1.5) +
abline(m1)
summary(m1)
m1 = glm(good ~ alcohol + volatile.acidity, data = low_high, family = binomial)
summary(m1)
m2 = update(m1, ~ . + sulphates)
summary(m2)
m3 = update(m2, ~ . + citric.acid)
summary(m3)
m2 = update(m1, ~ . + citric.acid)
m2 = update(m1, ~ . + citric.acid)
summary(m2)
m4 = update(m3, ~ . + chlorides)
summary(m4)
m1 = glm(good ~ alcohol + volatile.acidity, data = low_high, family = gaussian)
summary(m1)
?glm
m2 = update(m1, ~ . + sulphates)
summary(m2)
m3 = update(m2, ~ . + citric.acid)
summary(m3)
m4 = update(m3, ~ . + chlorides)
summary(m4)
pred = predict(m4,low_high[,c('alcohol', 'volatile.acidity',
'sulphates','citric.acid',
'chlorides')])
table(pred, low_high$category)
table(pred>0.5, low_high$good)
(44+209)/(44+209)+27)
(44+209)/(44+209+27)
m1 = lm(good ~ alcohol + volatile.acidity, data = low_high)
summary(m1)
m2 = update(m1, ~ . + sulphates)
summary(m2)
m3 = update(m2, ~ . + citric.acid)
summary(m3)
m4 = update(m3, ~ . + chlorides)
summary(m4)
pred = predict(m4,low_high[,c('alcohol', 'volatile.acidity',
'sulphates','citric.acid',
'chlorides')])
(pred-low_high$good)^2/length(pred)
sum(pred-low_high$good)^2/length(pred)
sum((pred-low_high$good)^2)/length(pred)
m1 = lm(quality ~ alcohol + volatile.acidity, data = low_high)
m2 = update(m1, ~ . + sulphates)
m3 = update(m2, ~ . + citric.acid)
m4 = update(m3, ~ . + chlorides)
m1 = lm(quality ~ alcohol + volatile.acidity, data = low_high)
m2 = update(m1, ~ . + sulphates)
m3 = update(m2, ~ . + citric.acid)
m4 = update(m3, ~ . + chlorides)
pred = predict(m4,low_high[,c('alcohol', 'volatile.acidity',
'sulphates','citric.acid',
'chlorides')])
sum((pred-low_high$good)^2)/length(pred)
m1 = naiveBayes(category ~ alcohol + volatile.acidity, data = redwine)
m2 = update(m1, ~ . + sulphates)
m3 = update(m2, ~ . + citric.acid)
m4 = update(m3, ~ . + chlorides)
pred <- predict(m4,
redwine[,c('alcohol','volatile.acidity')])
pred = predict(m4,low_high[,c('alcohol', 'volatile.acidity',
'sulphates','citric.acid',
'chlorides')])
table(pred, redwine$category)
pred = predict(m4,redwine[,c('alcohol', 'volatile.acidity',
'sulphates','citric.acid',
'chlorides')])
table(pred, redwine$category)
m1 = naiveBayes(category ~ alcohol + volatile.acidity, data = redwine)
m2 = update(m1, ~ . + sulphates)
m3 = update(m2, ~ . + citric.acid)
m4 = update(m3, ~ . + chlorides)
pred = predict(m4,redwine[,c('alcohol', 'volatile.acidity',
'sulphates','citric.acid',
'chlorides')])
table(pred, redwine$category)
head(pred)
m1 = naiveBayes(category ~ alcohol + volatile.acidity, data = redwine)
m2 = update(m1, ~ . + sulphates)
m3 = update(m2, ~ . + citric.acid)
m4 = update(m3, ~ . + chlorides)
pred = predict(m4,redwine[,c('alcohol', 'volatile.acidity',
'sulphates','citric.acid',
'chlorides')])
table(pred, redwine$category)
summary(m1)
m1 = naiveBayes(category ~ alcohol + volatile.acidity, data = redwine)
m2 = update(m1, ~ . + sulphates)
m3 = update(m2, ~ . + citric.acid)
m4 = update(m3, ~ . + chlorides)
m1 = naiveBayes(category ~ alcohol + volatile.acidity+
sulphates + citric. acid + chlorides, data = redwine)
m1 = naiveBayes(category ~ alcohol + volatile.acidity+
sulphates + citric.acid + chlorides, data = redwine)
pred = predict(m1,redwine[,c('alcohol', 'volatile.acidity',
'sulphates','citric.acid',
'chlorides')])
heas(pred)
head(pred)
table(pred, redwine$category)
(1150+138+8)/length(redwine)
qplot(qualityF, data=redwine,
fill=I('blue'), color=I('black'),
binwidth=1) +
ylab("Number of wines") +
xlab("Quality") +
ggtitle('Distribution of wines by Quality') +
scale_x_discrete()
theme_set(theme_bw(20))
ggplot(data=redwine,
aes(x=volatile.acidity, y=alcohol, color=qualityF)) +
geom_point(size=2) +
scale_color_brewer(type='div',
guide = guide_legend(title = 'Quality')) + facet_grid(.~qualityF)
theme_set(theme_bw(20))
ggplot(data=redwine,
aes(x=volatile.acidity, y=alcohol, color=qualityF)) +
geom_point(size=2) +
scale_color_brewer(type='div',
guide = guide_legend(title = 'Quality')) + facet_grid(.~qualityF) +
xlab('Volatile Acidity [g/dm^3]')
theme_set(theme_bw(20))
ggplot(data=redwine,
aes(x=volatile.acidity, y=alcohol, color=qualityF)) +
geom_point(size=2) +
scale_color_brewer(type='div',
guide = guide_legend(title = 'Quality')) + facet_grid(.~qualityF) +
xlab('Volatile Acidity [g/dm^3]') +
ylab('Alcohol [%]') +
ggtitle('Alcohol vs Volatile Acidity for different wine qualities')
by(redwine$volatile.acidity, redwine$qualityF, summary)
by(redwine$alcohol, redwine$qualityF, summary)
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category), size=1.5)
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category), size=1.5)
#going back to alcohol vs volatile.acidity plot to delineate clusters
#create category feature to reduce number of quality groups
redwine$category[redwine$quality==3|redwine$quality==4] <- 'low'
redwine$category[redwine$quality==5|redwine$quality==6] <- 'average'
redwine$category[redwine$quality==7|redwine$quality==8] <- 'high'
redwine$category <- as.factor(redwine$category)
#classify data using alcohol and volatile acidity to determine category clusters on plot
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=redwine)
pred <- predict(classifier,
redwine[,c('alcohol','volatile.acidity')])
#create data frame with different combinations of feature values and predict category using classifier
va <- seq(0, 2, length.out = 100)
alc <- seq(8, 15, length.out = 100)
cluster.results <- as.data.frame(expand.grid(x = va, y = alc))
names(cluster.results)=c('volatile.acidity','alcohol')
pred = predict(classifier,cluster.results)
cluster.results$category<-pred
#plot clusters and data points
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category), size=1.5)
#subset data to include only low and high quality wines for clustering
low_high<- subset(redwine, category=='low' | category=='high')
#classify data using alcohol and volatile acidity for low and high quality wines
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=low_high)
pred <- predict(classifier,
low_high[,c('alcohol','volatile.acidity')])
#predict categories using classifier
pred = predict(classifier,cluster.results)
cluster.results$category<-pred
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category), size=1.5)
#going back to alcohol vs volatile.acidity plot to delineate clusters
#create category feature to reduce number of quality groups
redwine$category[redwine$quality==3|redwine$quality==4] <- 'low'
redwine$category[redwine$quality==5|redwine$quality==6] <- 'average'
redwine$category[redwine$quality==7|redwine$quality==8] <- 'high'
redwine$category <- as.factor(redwine$category)
#classify data using alcohol and volatile acidity to determine category clusters on plot
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=redwine)
pred <- predict(classifier,
redwine[,c('alcohol','volatile.acidity')])
#create data frame with different combinations of feature values and predict category using classifier
va <- seq(0, 2, length.out = 100)
alc <- seq(8, 15, length.out = 100)
cluster.results <- as.data.frame(expand.grid(x = va, y = alc))
names(cluster.results)=c('volatile.acidity','alcohol')
pred = predict(classifier,cluster.results)
cluster.results$category<-pred
#plot clusters and data points
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category), size=1.5)
#subset data to include only low and high quality wines for clustering
low_high<- subset(redwine, category=='low' | category=='high')
#classify data using alcohol and volatile acidity for low and high quality wines
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=low_high)
pred <- predict(classifier,
low_high[,c('alcohol','volatile.acidity')])
#predict categories using classifier
pred = predict(classifier,cluster.results)
cluster.results$category<-pred
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category), size=1.5)
pred = predict(classifier,cluster.results)
cluster.results$category<-pred
ggplot(data=cluster.results,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category), size=1.5)
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=redwine)
#create data frame with different combinations of feature values and predict category using classifier
va <- seq(0, 2, length.out = 100)
alc <- seq(8, 15, length.out = 100)
NB1<- as.data.frame(expand.grid(x = va, y = alc))
NB1(names)=c('volatile.acidity','alcohol')
pred = predict(classifier,NB1)
NB1$category<-pred
#plot clusters and data points
ggplot(data=NB1,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category), size=1.5)
redwine$category[redwine$quality==3|redwine$quality==4] <- 'low'
redwine$category[redwine$quality==5|redwine$quality==6] <- 'average'
redwine$category[redwine$quality==7|redwine$quality==8] <- 'high'
redwine$category <- as.factor(redwine$category)
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=redwine)
va <- seq(0, 2, length.out = 100)
alc <- seq(8, 15, length.out = 100)
NB1<- as.data.frame(expand.grid(x = va, y = alc))
NB1(names)=c('volatile.acidity','alcohol')
pred = predict(classifier,NB1)
NB1$category<-pred
va <- seq(0, 2, length.out = 100)
alc <- seq(8, 15, length.out = 100)
NB1<- as.data.frame(expand.grid(x = va, y = alc))
names(NB1)=c('volatile.acidity','alcohol')
pred = predict(classifier,NB1)
NB1$category<-pred
ggplot(data=NB1,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=redwine, aes(color=category), size=1.5)
classifier <- naiveBayes(category~alcohol+volatile.acidity,
data=low_high)
NB2<- as.data.frame(expand.grid(x = va, y = alc))
names(NB2)=c('volatile.acidity','alcohol')
pred = predict(classifier,NB2)
NB2$category<-pred
ggplot(data=NB2,
aes(x=volatile.acidity, y=alcohol)) +
geom_raster(aes(fill=category), alpha = 0.2) +
geom_point(data=low_high, aes(color=category), size=1.5)
redwine$qualityF <- as.factor(redwine$quality)
ggplot(data=redwine, aes(x=qualityF, y=volatile.acidity)) +
geom_point(position='jitter', alpha=0.3) +
geom_boxplot(color='blue',  alpha=0,
outlier.colour='blue', size=0.5)
ggplot(data=redwine,
aes(x=qualityF, y=sulphates)) +
geom_point(position='jitter', alpha=0.3) +
geom_boxplot(color='blue',  alpha=0,
outlier.colour='blue', size=0.5)
scale_y_continuous(lim=c(0.3, 1.2),
breaks=seq(0.3,1.2,0.1))
ggplot(data=redwine, aes(x=qualityF, y=volatile.acidity)) +
geom_boxplot(alpha=0, size=0.5)
ggplot(data=redwine, aes(x=qualityF, y=free.sulfur.dioxide)) +
geom_boxplot(alpha=0, size=0.5)
ggplot(data=redwine,
aes(x=qualityF, y=sulphates)) +
geom_boxplot(alpha=0, size=0.5)
scale_y_continuous(lim=c(0.3, 1.2),
breaks=seq(0.3,1.2,0.1))
ggplot(data=redwine, aes(x=qualityF, y=total.sulfur.dioxide)) +
geom_boxplot()
ggplot(data=redwine, aes(x=qualityF, y=total.sulfur.dioxide)) +
geom_boxplot() +
coord_cartesian(ylim=c(0,150))
ggplot(data=redwine, aes(x=qualityF, y=total.sulfur.dioxide)) +
geom_boxplot()
qplot(data=subset(redwine, quality) + facet_wrap(~pH_normal)
qplot(data=subset(redwine, quality) + facet_wrap(~pH_normal)
qplot(data=subset(redwine, quality))+ facet_wrap(~pH_normal)
qplot(data=redwine, quality)+ facet_wrap(~pH_normal)
?facet_wrap
qplot(data=redwine, x=quality)+ facet_wrap(~pH_normal)
ggplot(data=redwine, aes=(quality))+ geom_bar + facet_grid(~pH_normal)
ggplot(data=redwine, aes=(quality))+ geom_bar() + facet_grid(~pH_normal)
ggplot(data=redwine, aes=(x=quality))+ geom_bar() + facet_grid(~pH_normal)
?facet_wrap
ggplot(data=redwine, aes=(x=quality))+ geom_bar() + facet_wrap(~pH_normal)
